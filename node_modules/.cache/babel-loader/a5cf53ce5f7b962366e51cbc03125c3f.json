{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getFilmDetails, getFilms } from \"./actions\";\nconst initState = {\n  films: [],\n  isLoading: false,\n  page: 1,\n  detailedMovie: {},\n  errorInfo: ''\n};\nexport const filmsReducer = createReducer(initState, builder => {\n  builder.addCase(getFilms.pending, state => {\n    state.isLoading = true;\n  }).addCase(getFilms.fulfilled, (state, {\n    payload\n  }) => {\n    state.isLoading = false;\n    state.films = payload.data.results;\n  }).addCase(getFilms.rejected, state => {\n    state.isLoading = false;\n    state.errorInfo = 'unable to fetch data';\n  }).addCase(getFilmDetails.pending, state => {\n    state.isLoading = true;\n  }).addCase(getFilmDetails.fulfilled, (state, {\n    payload: {\n      data\n    }\n  }) => {\n    state.isLoading = true;\n    state.detailedMovie = data;\n  }).addCase(getFilmDetails.rejected, state => {\n    state.isLoading = false;\n    state.errorInfo = 'unable to fetch data';\n  });\n});","map":{"version":3,"sources":["/Users/przemyslawleksa/Documents/code/Mentoring/Users_api/src/store/films/reducer.ts"],"names":["createReducer","getFilmDetails","getFilms","initState","films","isLoading","page","detailedMovie","errorInfo","filmsReducer","builder","addCase","pending","state","fulfilled","payload","data","results","rejected"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,WAAzC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,IAAI,EAAE,CAHQ;AAIdC,EAAAA,aAAa,EAAE,EAJD;AAKdC,EAAAA,SAAS,EAAE;AALG,CAAlB;AAQA,OAAO,MAAMC,YAAY,GAAGT,aAAa,CAACG,SAAD,EAAYO,OAAO,IAAI;AAC5DA,EAAAA,OAAO,CACFC,OADL,CACaT,QAAQ,CAACU,OADtB,EAC+BC,KAAK,IAAI;AAChCA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACH,GAHL,EAIKM,OAJL,CAIaT,QAAQ,CAACY,SAJtB,EAIiC,CAACD,KAAD,EAAQ;AAAEE,IAAAA;AAAF,GAAR,KAAyB;AAClDF,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,IAAAA,KAAK,CAACT,KAAN,GAAcW,OAAO,CAACC,IAAR,CAAaC,OAA3B;AACH,GAPL,EAQKN,OARL,CAQaT,QAAQ,CAACgB,QARtB,EAQgCL,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,IAAAA,KAAK,CAACL,SAAN,GAAkB,sBAAlB;AACH,GAXL,EAYKG,OAZL,CAYaV,cAAc,CAACW,OAZ5B,EAYqCC,KAAK,IAAI;AACtCA,IAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACH,GAdL,EAeKM,OAfL,CAeaV,cAAc,CAACa,SAf5B,EAeuC,CAACD,KAAD,EAAQ;AAAEE,IAAAA,OAAO,EAAE;AAACC,MAAAA;AAAD;AAAX,GAAR,KAAgC;AAC/DH,IAAAA,KAAK,CAACR,SAAN,GAAgB,IAAhB;AACAQ,IAAAA,KAAK,CAACN,aAAN,GAAsBS,IAAtB;AACH,GAlBL,EAmBKL,OAnBL,CAmBaV,cAAc,CAACiB,QAnB5B,EAmBsCL,KAAK,IAAI;AACvCA,IAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,IAAAA,KAAK,CAACL,SAAN,GAAkB,sBAAlB;AACH,GAtBL;AAuBH,CAxBwC,CAAlC","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\"\nimport { getFilmDetails, getFilms } from \"./actions\"\n\nconst initState = {\n    films: [],\n    isLoading: false,\n    page: 1,\n    detailedMovie: {},\n    errorInfo: ''\n}\n\nexport const filmsReducer = createReducer(initState, builder => {\n    builder\n        .addCase(getFilms.pending, state => {\n            state.isLoading = true\n        })\n        .addCase(getFilms.fulfilled, (state, { payload } ) => {\n            state.isLoading = false\n            state.films = payload.data.results\n        })\n        .addCase(getFilms.rejected, state => {\n            state.isLoading = false\n            state.errorInfo = 'unable to fetch data'\n        })\n        .addCase(getFilmDetails.pending, state => {\n            state.isLoading = true\n        })\n        .addCase(getFilmDetails.fulfilled, (state, { payload: {data} }) => {\n            state.isLoading=true\n            state.detailedMovie = data\n        })\n        .addCase(getFilmDetails.rejected, state => {\n            state.isLoading = false\n            state.errorInfo = 'unable to fetch data'\n        })\n})"]},"metadata":{},"sourceType":"module"}